{
  "paths": {
    "get_items": {
      "get": {
        "tags": [
          "ws api"
        ],
        "summary": "Get logic structure in json format",
        "operationId": "get_items",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsGetItems"
              }
            }
          },
          "required": true
        }
      }
    },
    "get_item": {
      "get": {
        "tags": [
          "ws api"
        ],
        "summary": "Get item in json format",
        "operationId": "get_item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsGetItem"
              }
            }
          },
          "required": true
        }
      }
    },
    "set_item": {
      "post": {
        "tags": [
          "ws api"
        ],
        "summary": "Write/append/remove item",
        "operationId": "set_item",
        "requestBody": {
          "content": {
            "json": {
              "schema": {
                "$ref": "#/components/schemas/WsSetItem"
              },
              "examples": {
                "write_item": {
                  "summary": "Write item with new attributes",
                  "description": "Example write item with new attributes",
                  "value": {
                    "command": "set_item",
                    "type": "write",
                    "tag": "item",
                    "area": "System",
                    "data": {
                      "addr": "999:99",
                      "type": "lamp",
                      "name": "example lamp"
                    }
                  }
                },
                "append_item": {
                  "summary": "Append attributes to item",
                  "description": "Example append attributes to item",
                  "value": {
                    "command": "set_item",
                    "type": "append",
                    "tag": "item",
                    "area": "System",
                    "data": {
                      "addr": "999:99",
                      "some_added_key": "some_added_value"
                    }
                  }
                },
                "remove_item": {
                  "summary": "Remove attributes from item",
                  "description": "Example remove attributes from item",
                  "value": {
                    "command": "set_item",
                    "type": "remove",
                    "tag": "item",
                    "area": "System",
                    "data": {
                      "addr": "999:99",
                      "some_removed_key": "any_value"
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "del_item": {
      "delete": {
        "tags": [
          "ws api"
        ],
        "summary": "Delete item",
        "operationId": "del_item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsDelItem"
              },
              "examples": {
                "delete_item": {
                  "summary": "Delete item from logic",
                  "description": "Example delete item from logic",
                  "value": {
                    "command": "del_item",
                    "addr": "999:99"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "get_state": {
      "get": {
        "tags": [
          "ws api"
        ],
        "summary": "Get current state of item",
        "operationId": "get_state",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsGetState",
                "examples": {
                  "get_state_of_one_item": {
                    "summary": "Get current state of one item",
                    "description": "Example get current state of one item",
                    "value": {
                      "command": "get_state",
                      "addr": "999:99"
                    }
                  },
                  "get_state_of_list_items": {
                    "summary": "Get current state of list of items",
                    "description": "Example get current state of list of items",
                    "value": {
                      "command": "get_state",
                      "addr": [
                        "999:99",
                        "999:98"
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "set_state": {
      "post": {
        "tags": [
          "ws api"
        ],
        "summary": "Set state on item",
        "operationId": "set_state",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsSetState"
              },
              "examples": {
                "set_state": {
                  "summary": "Set state on item",
                  "description": "Example set state on item",
                  "value": {
                    "command": "set_state",
                    "addr": "999:99",
                    "state": "01"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "get_all_states": {
      "get": {
        "tags": [
          "ws api"
        ],
        "summary": "Get current state of all items",
        "operationId": "get_all_states",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsGetAllStates"
              }
            }
          },
          "required": true
        }
      }
    },
    "get_history": {
      "get": {
        "tags": [
          "ws api"
        ],
        "summary": "Get statistics of item",
        "operationId": "get_history",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsGetHistory"
              },
              "examples": {
                "get_history": {
                  "summary": "Get history of item",
                  "description": "Example get gistory of item",
                  "value": {
                    "command": "get_history",
                    "addr": "999:99",
                    "range_time": [
                      1684746076,
                      1684832476
                    ],
                    "scale": 1
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "send_message": {
      "post": {
        "tags": [
          "ws api"
        ],
        "summary": "Send push-message to server",
        "operationId": "send_message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsSendMessage"
              },
              "examples": {
                "send_message": {
                  "summary": "Send push-message",
                  "description": "Example send push-message",
                  "value": {
                    "command": "send_message",
                    "addr": "2047:32",
                    "message_type": 1,
                    "message": "Text message"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "subscribe": {
      "post": {
        "tags": [
          "ws api"
        ],
        "summary": "Subscribe for receive events",
        "operationId": "subscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscribe"
              },
              "examples": {
                "list_items": {
                  "summary": "'event_items': List of items",
                  "description": "Example subscribe on a state of list of items",
                  "value": {
                    "command": "subscribe",
                    "event_items": [
                      "999:99",
                      "999:98"
                    ]
                  }
                },
                "one_item": {
                  "summary": "'event_items': One item",
                  "description": "Example subscribe on a state of item",
                  "value": {
                    "command": "subscribe",
                    "event_items": "999:99"
                  }
                },
                "all_items": {
                  "summary": "'event_items': All items",
                  "description": "Example subscribe on a state of all items. If the client subscribed to the state of all items, and then a new item was added to the logic, the client will not receive the state of this new element.",
                  "value": {
                    "command": "subscribe",
                    "event_items": "all"
                  }
                },
                "all_updates": {
                  "summary": "'event_logic': All logic updates",
                  "description": "Example subscribe on all updates logic and items.",
                  "value": {
                    "command": "subscribe",
                    "event_logic": "all"
                  }
                },
                "list_items_updates": {
                  "summary": "'event_logic': List items updates",
                  "description": "Example subscribe on updates list of items.",
                  "value": {
                    "command": "subscribe",
                    "event_logic": {
                      "items": [
                        "999:99",
                        "999:98"
                      ]
                    }
                  }
                },
                "one_item_update": {
                  "summary": "'event_logic': One item updates",
                  "description": "Example subscribe on updates one item.",
                  "value": {
                    "command": "subscribe",
                    "event_logic": {
                      "items": "999:99"
                    }
                  }
                },
                "items_and_logic_updates": {
                  "summary": "'event_logic': List of items and logic updates",
                  "description": "Example subscribe on updates logic and list of items.",
                  "value": {
                    "command": "subscribe",
                    "event_logic": {
                      "logic": true,
                      "items": [
                        "999:99"
                      ]
                    }
                  }
                },
                "logic_updates_in_xml": {
                  "summary": "'event_logic': Logic updates in xml format",
                  "description": "Example subscribe on updates logic in xml format.",
                  "value": {
                    "command": "subscribe",
                    "event_logic": {
                      "logic": true,
                      "response_type": "xml"
                    }
                  }
                },
                "list_items_history": {
                  "summary": "'event_statistics': List of items",
                  "description": "Example subscribe on a statistics of list of items",
                  "value": {
                    "command": "subscribe",
                    "event_statistics": [
                      "999:99",
                      "999:98"
                    ]
                  }
                },
                "one_item_history": {
                  "summary": "'event_statistics': One item",
                  "description": "Example subscribe on a statistics of item",
                  "value": {
                    "command": "subscribe",
                    "event_statistics": "999:99"
                  }
                },
                "all_items_history": {
                  "summary": "'event_statistics': All items",
                  "description": "Example subscribe on a statistics of all items.",
                  "value": {
                    "command": "subscribe",
                    "event_statistics": "all"
                  }
                },
                "list_push_types": {
                  "summary": "'event_msg': List of types of push-messages",
                  "description": "Example subscribe on a list of types of push-messages",
                  "value": {
                    "command": "subscribe",
                    "event_msg": [
                      1,
                      2,
                      3
                    ]
                  }
                },
                "one_push_type": {
                  "summary": "'event_msg': One type of push-message",
                  "description": "Example subscribe on a one type of push-message",
                  "value": {
                    "command": "subscribe",
                    "event_msg": 1
                  }
                },
                "all_push_types": {
                  "summary": "'event_msg': All types of push-messages",
                  "description": "Example subscribe on all types of push-messages.",
                  "value": {
                    "command": "subscribe",
                    "event_msg": "all"
                  }
                },
                "subscribe_all": {
                  "summary": "Subscribe all",
                  "description": "You can use any of these keys with their full functionality in one request.",
                  "value": {
                    "command": "subscribe",
                    "event_items": "all",
                    "event_logic": "all",
                    "event_statistics": "all",
                    "event_msg": "all"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "unsubscribe": {
      "post": {
        "tags": [
          "ws api"
        ],
        "summary": "Unsubscribe for not receive events",
        "operationId": "unsubscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unsubscribe"
              },
              "examples": {
                "list_items": {
                  "summary": "'event_items': List of items",
                  "description": "Example unsubscribe on a state of list of items",
                  "value": {
                    "command": "unsubscribe",
                    "event_items": [
                      "999:99",
                      "999:98"
                    ]
                  }
                },
                "one_item": {
                  "summary": "'event_items': One item",
                  "description": "Example unsubscribe on a state of item",
                  "value": {
                    "command": "unsubscribe",
                    "event_items": "999:99"
                  }
                },
                "all_items": {
                  "summary": "'event_items': All items",
                  "description": "Example unsubscribe on a state of all items.",
                  "value": {
                    "command": "unsubscribe",
                    "event_items": "all"
                  }
                },
                "all_updates": {
                  "summary": "'event_logic': All logic updates",
                  "description": "Example unsubscribe on all updates logic and items.",
                  "value": {
                    "command": "unsubscribe",
                    "event_logic": "all"
                  }
                },
                "list_items_updates": {
                  "summary": "'event_logic': List items updates",
                  "description": "Example unsubscribe on updates list of items.",
                  "value": {
                    "command": "unsubscribe",
                    "event_logic": {
                      "items": [
                        "999:99",
                        "999:98"
                      ]
                    }
                  }
                },
                "one_item_update": {
                  "summary": "'event_logic': One item updates",
                  "description": "Example unsubscribe on updates one item.",
                  "value": {
                    "command": "unsubscribe",
                    "event_logic": {
                      "items": "999:99"
                    }
                  }
                },
                "items_and_logic_updates": {
                  "summary": "'event_logic': List of items and logic updates",
                  "description": "Example unsubscribe on updates logic and list of items.",
                  "value": {
                    "command": "unsubscribe",
                    "event_logic": {
                      "logic": true,
                      "items": [
                        "999:99"
                      ]
                    }
                  }
                },
                "logic_updates_in_xml": {
                  "summary": "'event_logic': Logic updates in xml format",
                  "description": "Example unsubscribe on updates logic in xml format.",
                  "value": {
                    "command": "unsubscribe",
                    "event_logic": {
                      "logic": true,
                      "response_type": "xml"
                    }
                  }
                },
                "list_items_history": {
                  "summary": "'event_statistics': List of items",
                  "description": "Example unsubscribe on a statistics of list of items",
                  "value": {
                    "command": "unsubscribe",
                    "event_statistics": [
                      "999:99",
                      "999:98"
                    ]
                  }
                },
                "one_item_history": {
                  "summary": "'event_statistics': One item",
                  "description": "Example unsubscribe on a statistics of item",
                  "value": {
                    "command": "unsubscribe",
                    "event_statistics": "999:99"
                  }
                },
                "all_items_history": {
                  "summary": "'event_statistics': All items",
                  "description": "Example unsubscribe on a statistics of all items.",
                  "value": {
                    "command": "unsubscribe",
                    "event_statistics": "all"
                  }
                },
                "list_push_types": {
                  "summary": "'event_msg': List of types of push-messages",
                  "description": "Example unsubscribe on a list of types of push-messages",
                  "value": {
                    "command": "unsubscribe",
                    "event_msg": [
                      1,
                      2,
                      3
                    ]
                  }
                },
                "one_push_type": {
                  "summary": "'event_msg': One type of push-message",
                  "description": "Example unsubscribe on a one type of push-message",
                  "value": {
                    "command": "unsubscribe",
                    "event_msg": 1
                  }
                },
                "all_push_types": {
                  "summary": "'event_msg': All types of push-messages",
                  "description": "Example unsubscribe on all types of push-messages.",
                  "value": {
                    "command": "unsubscribe",
                    "event_msg": "all"
                  }
                },
                "unsubscribe_all": {
                  "summary": "Unsubscribe all",
                  "description": "You can use any of these keys with their full functionality in one request",
                  "value": {
                    "command": "unsubscribe",
                    "event_items": "all",
                    "event_logic": "all",
                    "event_statistics": "all",
                    "event_msg": "all"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "schemas": {
    "WsGetItems": {
      "title": "Websocket Get Items",
      "required": [
        "command"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        }
      }
    },
    "WsSetItem": {
      "title": "Websocket Set Item",
      "required": [
        "command",
        "type",
        "tag",
        "area",
        "data"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        },
        "type": {
          "title": "Operation type (write, append, remove)",
          "type": "string"
        },
        "tag": {
          "title": "Tag of item ('item', 'area', etc.)",
          "type": "string"
        },
        "area": {
          "title": "Name of area. if set item in root - set 'smart-house'",
          "type": "string"
        },
        "data": {
          "title": "Attributes and childs of added item in format key:value",
          "type": "object"
        }
      }
    },
    "WsDelItem": {
      "title": "Websocket Delete Item",
      "required": [
        "command",
        "addr"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        },
        "addr": {
          "title": "Address of item",
          "type": "string"
        }
      }
    },
    "WsGetItem": {
      "title": "Websocket Get Item",
      "required": [
        "command",
        "addr"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        },
        "addr": {
          "title": "Address of item",
          "type": "string"
        }
      }
    },
    "WsGetState": {
      "title": "Websocket get state of item",
      "required": [
        "command",
        "addr"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        },
        "addr": {
          "title": "Address of item or list addressess",
          "type": "string"
        }
      }
    },
    "WsSetState": {
      "title": "Websocket set state on item",
      "required": [
        "command",
        "addr",
        "state"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        },
        "addr": {
          "title": "Address of item",
          "type": "string"
        },
        "state": {
          "title": "String of bytes state",
          "type": "string"
        }
      }
    },
    "WsGetAllStates": {
      "title": "Websocket get state of all items",
      "required": [
        "command"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        }
      }
    },
    "WsGetHistory": {
      "title": "Websocket get statistics of item",
      "required": [
        "command",
        "addr",
        "range_time",
        "scale"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        },
        "addr": {
          "title": "Address of item",
          "type": "string"
        },
        "range_time": {
          "title": "List of timestamps, start-end time",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "scale": {
          "title": "Period in minutes between values",
          "type": "integer"
        }
      }
    },
    "WsSendMessage": {
      "title": "Websocket send push-message to server",
      "required": [
        "command",
        "addr",
        "message_type",
        "message"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        },
        "addr": {
          "title": "Address of item",
          "type": "string"
        },
        "message_type": {
          "title": "Type of push-message",
          "type": "integer"
        },
        "message": {
          "title": "Message text",
          "type": "string"
        }
      }
    },
    "Subscribe": {
      "title": "Websocket subscribe on events",
      "required": [
        "command"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        },
        "event_items": {
          "title": "Address of item or list addresses",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "event_logic": {
          "title": "'items':Address of item or list addresses,'logic':True/false",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      }
    },
    "Unsubscribe": {
      "title": "Websocket unsubscribe on events",
      "required": [
        "command"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command for execute (input name function)",
          "type": "string"
        },
        "event_items": {
          "title": "Address of item or list addresses",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "event_logic": {
          "title": "'items':Address of item or list addresses,'logic':True/false",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      }
    }
  }
}